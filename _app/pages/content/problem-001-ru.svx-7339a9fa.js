import{S as s,i as a,s as n,B as p,j as t,m as e,o as l,p as o,q as c,x as r,u as m,v as i,X as u,e as h,t as k,k as g,Y as y,c as d,a as b,g as v,d as f,n as w,Z as E,b as x,f as P,E as $,R as M}from"../../chunks/vendor-2616681f.js";import{B as _}from"../../chunks/Blogpost-eb2626c7.js";import"../../chunks/theme-4f79273b.js";function S(s){let a,n,p,t,e,l,o,c,r,m,i,u,_,S,O,T,z,H,R,j,L,N,G,B,Z,J,q,X,Y,A,C,D,F,I,K,Q,U,V,W,ss,as,ns,ps,ts,es,ls,os,cs,rs,ms,is,us,hs,ks,gs,ys,ds,bs,vs,fs,ws,Es,xs,Ps,$s,Ms,_s,Ss,Os,Ts,zs,Hs,Rs,js,Ls,Ns,Gs,Bs,Zs,Js,qs;return{c(){a=h("p"),n=h("em"),p=k("Если выписать все натуральные числа меньше 10, кратные 3 или 5, то получим 3, 5, 6 и 9. Сумма этих чисел равна 23."),t=g(),e=h("p"),l=h("em"),o=k("Найдите сумму всех чисел меньше 1000, кратных 3 или 5."),c=g(),r=h("h2"),m=k("Вычислительный подход"),i=g(),u=h("p"),_=k("Попробуем решить задачу, вычислив сумму всех множителей напрямую, всё же тысяча - смехотворный объем работы для современной вычислительной техники."),S=g(),O=h("p"),T=k("Для решения задачи создадим переменную для хранения значения суммы кратных чисел. С помощью цикла, совершим обход натуральных чисел, проверяя делимость на 3 или 5 остатком от деления. Если остаток равен нулю - добавляем значение к нашей переменной. После окончания обхода задача решена."),z=g(),H=h("h3"),R=k("Пример реализации на Python"),j=g(),L=h("pre"),N=g(),G=h("p"),B=k("Можно попробовать решить задачу с помощью "),Z=h("strong"),J=k("list comprehension"),q=k(":"),X=g(),Y=h("pre"),A=g(),C=h("h3"),D=k("Пример реализации на JavaScript"),F=g(),I=h("pre"),K=g(),Q=h("h2"),U=k("Поиск оптимального решения"),V=g(),W=h("p"),ss=k("Пусть прямолинейное решение и работает молниеносно, сложность всё же составляет "),as=h("strong"),ns=k("O(n)"),ps=k(", другими словами, чем больше поле поиска, тем больше проверок. Попробуем решить поставленную задачу другим, более оптимальным способом со сложностью "),ts=h("strong"),es=k("O(1)"),ls=k(". В этом нам поможет школьный курс алгебры!"),os=g(),cs=h("p"),rs=k("Выписав кратные для 3, заметим, что они образуют "),ms=h("em"),is=k("арифметическую прогрессию"),us=k(":"),hs=g(),ks=new y,gs=g(),ys=h("p"),ds=k("Её можно заметно упростить, вынеся тройку за скобку:"),bs=g(),vs=new y,fs=g(),ws=h("p"),Es=k("Для нахождения суммы в скобках понадобится формула суммы арифметической прогрессии, запишем её:"),xs=g(),Ps=new y,$s=g(),Ms=h("p"),_s=k("С помощью формулы суммы, можем найти сумму всех кратных чисел 3 и 5 по отдельности, а потом сложить. Верно? Не совсем. Торопясь, можно упустить небольшую деталь. Некоторые числа являются кратными как для 3, так и для 5. Например, 15. Говоря на математическом языке, множества кратных чисел имеют пересечение. Взяв сумму двух прогрессий, некоторые значения дублируются."),Ss=g(),Os=h("p"),Ts=k("Воспользуемся тем же оружием, найдем сумму прогрессии чисел, кратных 3 и 5. Полученную сумму вычтем из общей суммы."),zs=g(),Hs=h("p"),Rs=k("В итоге, мы получили математическое выражение для решения задачи. Сложность алгоритма "),js=h("strong"),Ls=k("O(1)"),Ns=k("!"),Gs=g(),Bs=h("h2"),Zs=k("Реализация на Python"),Js=g(),qs=h("pre"),this.h()},l(s){a=d(s,"P",{});var h=b(a);n=d(h,"EM",{});var k=b(n);p=v(k,"Если выписать все натуральные числа меньше 10, кратные 3 или 5, то получим 3, 5, 6 и 9. Сумма этих чисел равна 23."),k.forEach(f),h.forEach(f),t=w(s),e=d(s,"P",{});var g=b(e);l=d(g,"EM",{});var y=b(l);o=v(y,"Найдите сумму всех чисел меньше 1000, кратных 3 или 5."),y.forEach(f),g.forEach(f),c=w(s),r=d(s,"H2",{});var x=b(r);m=v(x,"Вычислительный подход"),x.forEach(f),i=w(s),u=d(s,"P",{});var P=b(u);_=v(P,"Попробуем решить задачу, вычислив сумму всех множителей напрямую, всё же тысяча - смехотворный объем работы для современной вычислительной техники."),P.forEach(f),S=w(s),O=d(s,"P",{});var $=b(O);T=v($,"Для решения задачи создадим переменную для хранения значения суммы кратных чисел. С помощью цикла, совершим обход натуральных чисел, проверяя делимость на 3 или 5 остатком от деления. Если остаток равен нулю - добавляем значение к нашей переменной. После окончания обхода задача решена."),$.forEach(f),z=w(s),H=d(s,"H3",{});var M=b(H);R=v(M,"Пример реализации на Python"),M.forEach(f),j=w(s),L=d(s,"PRE",{class:!0}),b(L).forEach(f),N=w(s),G=d(s,"P",{});var Xs=b(G);B=v(Xs,"Можно попробовать решить задачу с помощью "),Z=d(Xs,"STRONG",{});var Ys=b(Z);J=v(Ys,"list comprehension"),Ys.forEach(f),q=v(Xs,":"),Xs.forEach(f),X=w(s),Y=d(s,"PRE",{class:!0}),b(Y).forEach(f),A=w(s),C=d(s,"H3",{});var As=b(C);D=v(As,"Пример реализации на JavaScript"),As.forEach(f),F=w(s),I=d(s,"PRE",{class:!0}),b(I).forEach(f),K=w(s),Q=d(s,"H2",{});var Cs=b(Q);U=v(Cs,"Поиск оптимального решения"),Cs.forEach(f),V=w(s),W=d(s,"P",{});var Ds=b(W);ss=v(Ds,"Пусть прямолинейное решение и работает молниеносно, сложность всё же составляет "),as=d(Ds,"STRONG",{});var Fs=b(as);ns=v(Fs,"O(n)"),Fs.forEach(f),ps=v(Ds,", другими словами, чем больше поле поиска, тем больше проверок. Попробуем решить поставленную задачу другим, более оптимальным способом со сложностью "),ts=d(Ds,"STRONG",{});var Is=b(ts);es=v(Is,"O(1)"),Is.forEach(f),ls=v(Ds,". В этом нам поможет школьный курс алгебры!"),Ds.forEach(f),os=w(s),cs=d(s,"P",{});var Ks=b(cs);rs=v(Ks,"Выписав кратные для 3, заметим, что они образуют "),ms=d(Ks,"EM",{});var Qs=b(ms);is=v(Qs,"арифметическую прогрессию"),Qs.forEach(f),us=v(Ks,":"),Ks.forEach(f),hs=w(s),ks=E(s),gs=w(s),ys=d(s,"P",{});var Us=b(ys);ds=v(Us,"Её можно заметно упростить, вынеся тройку за скобку:"),Us.forEach(f),bs=w(s),vs=E(s),fs=w(s),ws=d(s,"P",{});var Vs=b(ws);Es=v(Vs,"Для нахождения суммы в скобках понадобится формула суммы арифметической прогрессии, запишем её:"),Vs.forEach(f),xs=w(s),Ps=E(s),$s=w(s),Ms=d(s,"P",{});var Ws=b(Ms);_s=v(Ws,"С помощью формулы суммы, можем найти сумму всех кратных чисел 3 и 5 по отдельности, а потом сложить. Верно? Не совсем. Торопясь, можно упустить небольшую деталь. Некоторые числа являются кратными как для 3, так и для 5. Например, 15. Говоря на математическом языке, множества кратных чисел имеют пересечение. Взяв сумму двух прогрессий, некоторые значения дублируются."),Ws.forEach(f),Ss=w(s),Os=d(s,"P",{});var sa=b(Os);Ts=v(sa,"Воспользуемся тем же оружием, найдем сумму прогрессии чисел, кратных 3 и 5. Полученную сумму вычтем из общей суммы."),sa.forEach(f),zs=w(s),Hs=d(s,"P",{});var aa=b(Hs);Rs=v(aa,"В итоге, мы получили математическое выражение для решения задачи. Сложность алгоритма "),js=d(aa,"STRONG",{});var na=b(js);Ls=v(na,"O(1)"),na.forEach(f),Ns=v(aa,"!"),aa.forEach(f),Gs=w(s),Bs=d(s,"H2",{});var pa=b(Bs);Zs=v(pa,"Реализация на Python"),pa.forEach(f),Js=w(s),qs=d(s,"PRE",{class:!0}),b(qs).forEach(f),this.h()},h(){x(L,"class","language-python"),x(Y,"class","language-python"),x(I,"class","language-js"),ks.a=gs,vs.a=fs,Ps.a=$s,x(qs,"class","language-python")},m(s,h){P(s,a,h),$(a,n),$(n,p),P(s,t,h),P(s,e,h),$(e,l),$(l,o),P(s,c,h),P(s,r,h),$(r,m),P(s,i,h),P(s,u,h),$(u,_),P(s,S,h),P(s,O,h),$(O,T),P(s,z,h),P(s,H,h),$(H,R),P(s,j,h),P(s,L,h),L.innerHTML='<code class="language-python"><span class="token keyword">def</span> <span class="token function">multiples_sum</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  total <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> number <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">or</span> number <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>\n      total <span class="token operator">+=</span> number\n  <span class="token keyword">return</span> number</code>',P(s,N,h),P(s,G,h),$(G,B),$(G,Z),$(Z,J),$(G,q),P(s,X,h),P(s,Y,h),Y.innerHTML='<code class="language-python">  multiples_sum <span class="token operator">=</span> <span class="token keyword">lambda</span> limit<span class="token punctuation">:</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span> number <span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span> <span class="token keyword">if</span> number <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">or</span> number <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">)</span></code>',P(s,A,h),P(s,C,h),$(C,D),P(s,F,h),P(s,I,h),I.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">multiplesSum</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> number <span class="token operator">&lt;</span> limit<span class="token punctuation">;</span> number<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>total <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> total <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      total <span class="token operator">+=</span> number<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token keyword">return</span> total<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',P(s,K,h),P(s,Q,h),$(Q,U),P(s,V,h),P(s,W,h),$(W,ss),$(W,as),$(as,ns),$(W,ps),$(W,ts),$(ts,es),$(W,ls),P(s,os,h),P(s,cs,h),$(cs,rs),$(cs,ms),$(ms,is),$(cs,us),P(s,hs,h),ks.m('<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>3</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>9</mn><mo separator="true">,</mo><mn>12</mn><mo separator="true">,</mo><mn>15</mn><mo separator="true">,</mo><mn>18...</mn></mrow><annotation encoding="application/x-tex">3, 6, 9, 12, 15, 18...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">12</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">15</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">18...</span></span></span></span></span>',s,h),P(s,gs,h),P(s,ys,h),$(ys,ds),P(s,bs,h),vs.m('<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>3</mn><mo>×</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>4</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3 \times (1 + 2 + 3 + 4 + ... + N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span>',s,h),P(s,fs,h),P(s,ws,h),$(ws,Es),P(s,xs,h),Ps.m('<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><mn>2</mn></mfrac><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">S_n = \frac{a_1 + a_n}{2} \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.9463300000000001em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></span>',s,h),P(s,$s,h),P(s,Ms,h),$(Ms,_s),P(s,Ss,h),P(s,Os,h),$(Os,Ts),P(s,zs,h),P(s,Hs,h),$(Hs,Rs),$(Hs,js),$(js,Ls),$(Hs,Ns),P(s,Gs,h),P(s,Bs,h),$(Bs,Zs),P(s,Js,h),P(s,qs,h),qs.innerHTML='<code class="language-python">arithmetic_sum<span class="token punctuation">(</span>divisor<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  last_multiple <span class="token operator">=</span> floor<span class="token punctuation">(</span><span class="token punctuation">(</span>limit <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> divisor<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> divisor <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> last_multiple<span class="token punctuation">)</span> <span class="token operator">*</span> last_multiple <span class="token operator">/</span> <span class="token number">2</span>\n\nmultiples_sum<span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  <span class="token keyword">return</span> arithmetic_sum<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> limit<span class="token punctuation">)</span> <span class="token operator">+</span> arithmetic_sum<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> limit<span class="token punctuation">)</span> <span class="token operator">-</span> arithmetic_sum<span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">,</span> limit<span class="token punctuation">)</span></code>'},p:M,d(s){s&&f(a),s&&f(t),s&&f(e),s&&f(c),s&&f(r),s&&f(i),s&&f(u),s&&f(S),s&&f(O),s&&f(z),s&&f(H),s&&f(j),s&&f(L),s&&f(N),s&&f(G),s&&f(X),s&&f(Y),s&&f(A),s&&f(C),s&&f(F),s&&f(I),s&&f(K),s&&f(Q),s&&f(V),s&&f(W),s&&f(os),s&&f(cs),s&&f(hs),s&&ks.d(),s&&f(gs),s&&f(ys),s&&f(bs),s&&vs.d(),s&&f(fs),s&&f(ws),s&&f(xs),s&&Ps.d(),s&&f($s),s&&f(Ms),s&&f(Ss),s&&f(Os),s&&f(zs),s&&f(Hs),s&&f(Gs),s&&f(Bs),s&&f(Js),s&&f(qs)}}}function O(s){let a,n;const u=[s[0],T];let h={$$slots:{default:[S]},$$scope:{ctx:s}};for(let t=0;t<u.length;t+=1)h=p(h,u[t]);return a=new _({props:h}),{c(){t(a.$$.fragment)},l(s){e(a.$$.fragment,s)},m(s,p){l(a,s,p),n=!0},p(s,[n]){const p=1&n?o(u,[1&n&&c(s[0]),0&n&&c(T)]):{};2&n&&(p.$$scope={dirty:n,ctx:s}),a.$set(p)},i(s){n||(r(a.$$.fragment,s),n=!0)},o(s){m(a.$$.fragment,s),n=!1},d(s){i(a,s)}}}const T={title:"Проект Эйлера #1: Числа, кратные 3 или 5",series:"Проект Эйлера",lang:"ru",created:"2021-06-10T00:00:00.000Z",updated:"2021-08-26T00:00:00.000Z",slug:"project-euler-001-ru",layout:"blogpost"};function z(s,a,n){return s.$$set=s=>{n(0,a=p(p({},a),u(s)))},[a=u(a)]}class H extends s{constructor(s){super(),a(this,s,z,O,n,{})}}export{H as default,T as metadata};
